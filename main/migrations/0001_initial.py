<<<<<<< HEAD
# Generated by Django 4.2.2 on 2024-06-14 12:42
=======
# Generated by Django 4.2.2 on 2024-06-13 20:44
>>>>>>> 75b95508327cd0b2047bf48dcfa08160ef3865ce

import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import django.utils.timezone
import main.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('ADMIN', 'Admin'), ('CLIENT', 'Client'), ('SKILLAS', 'Skillas')], max_length=50)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone_no', models.CharField(max_length=15, unique=True, verbose_name='Phone Number')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='JobCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'verbose_name_plural': 'Job Categories',
            },
        ),
        migrations.CreateModel(
            name='Wallet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('main', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('pending', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('withdrawn', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user_wallet', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')], default=None)),
                ('comment', models.CharField(blank=True, max_length=100, null=True)),
                ('rater', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='rater', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rated_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TrainingAndCertification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cert_earned', models.CharField(blank=True, max_length=100, null=True)),
                ('skill_learned', models.CharField(blank=True, max_length=100, null=True)),
                ('grade', models.CharField(blank=True, max_length=128, null=True)),
                ('assessed', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Thread',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('thread_type', models.CharField(choices=[('personal', 'Personal'), ('group', 'Group')], default='group', max_length=15)),
                ('users', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SkillaProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(blank=True, choices=[('NIGERIA', 'Nigeria'), ('UK', 'United Kingdom'), ('USA', 'United States of America'), ('GHANA', 'Ghana')], max_length=20, null=True)),
                ('state', models.CharField(blank=True, max_length=20, null=True)),
                ('current_location', models.CharField(blank=True, max_length=20, null=True)),
                ('experience', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Years of Experience')),
                ('portfolio', models.URLField(blank=True, null=True, verbose_name='links to your works')),
                ('professional_profiles_links', models.CharField(blank=True, max_length=256, null=True)),
                ('identification', models.ImageField(blank=True, null=True, upload_to='skillas_id_cards_for_kyc')),
                ('hourly_rate', models.PositiveIntegerField(blank=True, null=True, verbose_name='Hourly_rate or salary')),
                ('terms_and_conditions', models.BooleanField(blank=True, default=False)),
                ('activated', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProfilePicture',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='profile_pictures', verbose_name='Profile Picture')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('skilla_image', models.ImageField(default=None, upload_to='')),
                ('amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('pending', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('reference', models.CharField(blank=True, max_length=50, null=True)),
                ('message', models.CharField(blank=True, max_length=50, null=True)),
                ('status', models.CharField(blank=True, max_length=12, null=True)),
                ('channel', models.CharField(blank=True, max_length=10, null=True)),
                ('card_type', models.CharField(blank=True, max_length=10, null=True)),
                ('time_of_payment', models.CharField(blank=True, max_length=20, null=True)),
                ('order_no', models.PositiveSmallIntegerField(default=0)),
                ('completed', models.BooleanField(default=False)),
                ('skilla', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='skilla_paid', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='client_payer', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification', models.PositiveIntegerField(blank=True, null=True)),
                ('paid', models.BooleanField(default=False)),
                ('order_no', models.PositiveSmallIntegerField(default=main.models.order_number)),
                ('gig_desc', models.TextField(max_length=200, null=True, verbose_name='Gig description')),
                ('delivery', models.IntegerField(blank=True, null=True)),
                ('price', models.IntegerField(blank=True, null=True)),
                ('accepted', models.BooleanField(default=False)),
                ('decline', models.BooleanField(default=False)),
                ('completed', models.BooleanField(default=False)),
                ('order_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payer', to=settings.AUTH_USER_MODEL)),
                ('skilla', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='jobber', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('text', models.TextField()),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('thread', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.thread')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=15, null=True)),
                ('price', models.PositiveIntegerField()),
                ('desc', models.TextField(blank=True, null=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.jobcategory')),
            ],
        ),
        migrations.CreateModel(
            name='ContactList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contacts', models.ManyToManyField(blank=True, related_name='contacts', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='owner', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ConnectRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(blank=True, default=True)),
                ('receiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='receiver', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sender', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CompanyProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(blank=True, max_length=200)),
                ('location', models.CharField(blank=True, choices=[('NIGERIA', 'Nigeria'), ('UK', 'United Kingdom'), ('USA', 'United States of America'), ('GHANA', 'Ghana')], max_length=100, verbose_name='Location (City/Country)')),
                ('state', models.CharField(blank=True, max_length=50)),
                ('industry', models.CharField(blank=True, max_length=100, verbose_name='Industry or Business Type')),
                ('company_size', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='company size (Number of Employees)')),
                ('services', models.CharField(blank=True, max_length=200, null=True, verbose_name='Describe the services or skills needed (Optional)')),
                ('work_history_with_freelancer', models.BooleanField(blank=True, null=True, verbose_name='Have you worked with a freelancer or skilled workers Before')),
                ('terms_and_conditions', models.BooleanField(blank=True, default=False)),
                ('activated', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ClientProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(blank=True, choices=[('NIGERIA', 'Nigeria'), ('UK', 'United Kingdom'), ('USA', 'United States of America'), ('GHANA', 'Ghana')], max_length=20, null=True)),
                ('current_location', models.CharField(blank=True, max_length=20, null=True)),
                ('home_address', models.CharField(blank=True, max_length=256, null=True)),
                ('occupation', models.CharField(blank=True, max_length=50, null=True)),
                ('id_card', models.ImageField(upload_to='id_cards_for_kyc')),
                ('terms_and_conditions', models.BooleanField(blank=True, default=False)),
                ('activated', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AboutSkilla',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('about', models.TextField(max_length=150)),
                ('work_experience', models.CharField(blank=True, max_length=128, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Clients',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('main.user',),
            managers=[
                ('clients', django.db.models.manager.Manager()),
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Skillas',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('main.user',),
            managers=[
                ('skillas', django.db.models.manager.Manager()),
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='SkillaReachoutToClient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('budget', models.IntegerField(blank=True, null=True)),
                ('categories', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.jobcategory')),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='skilla_skilla_reachout_to_client', to='main.clients')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='client_skilla_reachout_to_client', to='main.skillas')),
            ],
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=50)),
                ('description', models.TextField(blank=True)),
                ('level', models.CharField(blank=True, choices=[('BEGINNER', 'Beginner'), ('INTERMEDIATE', 'Intermediate'), ('EXPERT', 'Expert')], max_length=15, null=True)),
                ('image', models.ImageField(blank=True, upload_to='skill_images')),
                ('base_price', models.PositiveIntegerField(blank=True, null=True)),
                ('activate', models.BooleanField(blank=True, default=True, null=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.jobcategory')),
                ('skill', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.job')),
                ('skilla', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.skillas')),
            ],
        ),
        migrations.CreateModel(
            name='MessageReadStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_read', models.BooleanField(default=False)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('message', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.message')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('message', 'user')},
            },
        ),
        migrations.CreateModel(
            name='ClientRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=15, null=True)),
                ('price', models.PositiveIntegerField()),
                ('desc', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Request Created on')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.jobcategory')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.clients')),
            ],
        ),
        migrations.CreateModel(
            name='Brief',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('attach_files', models.FileField(blank=True, null=True, upload_to='project_description_files')),
                ('budget', models.IntegerField(blank=True)),
                ('budget_flexible', models.BooleanField(default=False)),
                ('date', models.DateTimeField(default=datetime.datetime.now)),
                ('categories', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.jobcategory')),
                ('skilla', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='skilla', to='main.skillas')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='client', to='main.clients')),
            ],
        ),
    ]
